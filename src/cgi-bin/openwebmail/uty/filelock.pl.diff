--- filelock.pl.orig	Fri Nov 22 14:40:45 2002
+++ filelock.pl	Fri Nov 22 14:42:17 2002
@@ -7,14 +7,43 @@
 use strict;
 use Fcntl qw(:DEFAULT :flock);
 use FileHandle;
+use vars qw(%lockcount);
+
+local %lockcount=();
 
 sub filelock {
    my $ret;
+
+   my $str;
+   if ($_[1] & LOCK_UN) {
+      $str="unlock"; $lockcount{$_[0]}--;
+   } elsif ($_[1] & LOCK_EX) {
+      $str="W lock"; $lockcount{$_[0]}++;
+   } elsif ($_[1] & LOCK_SH) {
+      $str="R lock"; $lockcount{$_[0]}++;
+   } else {
+      $str="UNKNOW";
+   }
+   log_time ("[$$] $str $lockcount{$_[0]}:", @_);
+
    if ( $::config{'use_dotlockfile'} ) {
       $ret=filelock_dotlockfile(@_);
    } else {
       $ret=filelock_flock(@_);
    }
+
+   if ($ret==0) {
+      my ($origruid, $origeuid)=($<, $>);
+      my $prog="/usr/local/sbin/lsof $_[0]";
+      ($prog =~ /^(.+)$/) && ($prog = $1);
+
+      $>=0; $<=$>;			# set ruid/euid to root before exec
+      my $lsof=`$prog`;
+      $<=$origruid; $>=$origeuid;	# fall back to original ruid/euid
+
+      log_time("[$$] LOCK ERROR: locks on file =>\n", $lsof);
+   }
+
    return($ret);
 }
 
